# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

resources:
 pipelines:
 - pipeline: buildContosoAir # identifier for the resource used in pipeline resource variables
   source: ariadnaybulnes.ContosoAir # name of the pipeline that produces the artifact
   trigger:
    branches:
     include:
     - master

pool:
  vmImage: ubuntu-latest

steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      buildType: 'specific'
      project: 'ba8d0267-fe9a-435b-8ed5-adaf31d3bc8a'
      definition: '4'
      buildVersionToDownload: 'latest'
      targetPath: '$(Pipeline.Workspace)'


  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'azure-connection'
      subscriptionId: '857b1899-bce8-4e2d-94f3-6a772b90e9b4'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(resourcegroup)'
      location: 'East US'
      templateLocation: 'Linked artifact'
      csmFile: '$(Pipeline.Workspace)/drop/Templates/azuredeploy.json'
      csmParametersFile: '$(Pipeline.Workspace)/drop/Templates/azuredeploy.parameters.json'
      overrideParameters: '-p_environment $(web_environment) -p_site_prefix $(web_prefix) -p_site_web_name $(web_site)'
      deploymentMode: 'Incremental'

  - task: AzureRmWebAppDeployment@4
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'azure-connection'
      appType: 'webApp'
      WebAppName: '$(web_prefix)-$(web_site)-$(web_environment)'
      packageForLinux: '$(Pipeline.Workspace)/*/.zip'